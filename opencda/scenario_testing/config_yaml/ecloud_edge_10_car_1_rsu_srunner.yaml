description: |-
  Copyright 2021 <Georgia Tech>
  Author: Tyler Landle <tlandle3@gatech.edu>
  Content: This is the scenario testing configuration file for edge scenario
           at Town06 using CARLA

distributed: false
define: &perception_is_active true
perception_active: *perception_is_active

# define carla simulation setting
world:
  sync_mode: true
  client_port: 2000
  fixed_delta_seconds: &delta 0.05
  seed: 10
  weather:
    sun_altitude_angle: 15 # 90 is the midday and -90 is the midnight
    cloudiness: 0 # 0 is the clean sky and 75 is the thickest cloud
    precipitation: 0 # rain, 75 is the heaviest rain
    precipitation_deposits: 0 # Determines the creation of puddles. Values range from 0 to 75, being 0 none at all and 75 a road completely capped with water.
    wind_intensity: 0 # it will influence the rain
    fog_density: 0 # fog thickness, 75 is the largest
    fog_distance: 1000000  # Fog start distance. Values range from 0 to infinite.
    fog_falloff: 0 # Density of the fog (as in specific mass) from 0 to infinity. The bigger the value, the more dense and heavy it will be, and the fog will reach smaller heights
    wetness: 0

# First define the basic parameters of the vehicles
vehicle_base: &vehicle_base
  sensing: &base_sensing
    perception: &base_perception
      activate: true
      camera:
        visualize: 1 # how many camera images need to be visualized. 0 means no visualization for camera
        num: 1 # how many cameras are mounted on the vehicle.
        positions:  # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
          - [2.5, 0, 1.0, 0]
      lidar: # lidar sensor configuration, check CARLA sensor reference for more details
        visualize: false
        channels: 32
        range: 50
        points_per_second: 75000
        rotation_frequency: 20 # the simulation is 20 fps
        upper_fov: 10.0
        lower_fov: -30.0
        dropoff_general_rate: 0.0
        dropoff_intensity_limit: 1.0
        dropoff_zero_intensity: 0.0
        noise_stddev: 0.0
    localization: &base_localize
      activate: true # when not activated, ego position will be retrieved from server directly
      dt: *delta # used for kalman filter
      gnss: # gnss sensor configuration
        noise_alt_stddev: 0
        noise_lat_stddev: 0
        noise_lon_stddev: 0
        heading_direction_stddev: 0 # degree
        speed_stddev: 0
      debug_helper: &loc_debug_helper
        show_animation: true # whether to show real-time trajectory plotting
        x_scale: 1.0 # used to multiply with the x coordinate to make the error on x axis clearer
        y_scale: 75.0 # used to multiply with the y coordinate to make the error on y axis clearer
  behavior: &base_behavior
    max_speed: 111 # maximum speed, km/h
    tailgate_speed: 121 # when a vehicles needs to be close to another vehicle asap
    speed_lim_dist: 3 # max_speed - speed_lim_dist = target speed
    speed_decrease: 15 # used in car following mode to decrease speed for distance keeping
    safety_time: 20 # ttc safety thresholding for decreasing speed
    emergency_param: 25 # used to identify whether a emergency stop needed
    ignore_traffic_light: true # whether to ignore traffic light
    overtake_allowed: false # whether overtake allowed, typically false for platoon leader
    collision_time_ahead: 60 # used for collision checking
    overtake_counter_recover: 35 # the vehicle can not do another overtake during next certain steps
    sample_resolution: 4.5 # the unit distance between two adjacent waypoints in meter
    local_planner: &base_local_planner # trajectory planning related
      buffer_size: 24 # waypoint buffer size
      trajectory_update_freq: 15 # used to control trajectory points updating frequency
      waypoint_update_freq: 9 # used to control waypoint updating frequency
      min_dist: 3 # used to pop out the waypoints too close to current location
      trajectory_dt: 0.20 # for every dt seconds, we sample a trajectory point from the trajectory path as next goal state
      debug: true # whether to draw future/history waypoints
      debug_trajectory: true # whether to draw the trajectory points and path
  controller: &base_controller
    type: pid_controller # this has to be exactly the same name as the controller py file
    args: &control_args
      lat:
        k_p: 0.75
        k_d: 0.02
        k_i: 0.4
      lon:
        k_p: 0.37
        k_d: 0.024
        k_i: 0.032
      dynamic: false # whether use dynamic pid setting
      dt: *delta # this should be equal to your simulation time-step
      max_brake: 1.0
      max_throttle: 1.0
      max_steering: 0.3
  v2x: &base_v2x # comminuation related
    enabled: true
    communication_range: 35
    loc_noise: 0.0
    yaw_noise: 0.0
    speed_noise: 0.0
    lag: 0
  map_manager:
    pixels_per_meter: 2 # rasterization map resolution
    raster_size: [224, 224] # the rasterize map size (pixel)
    lane_sample_resolution: 0.1 # for every 0.1m, we draw a point of lane
    visualize: false # whether to visualize the rasteraization map
    activate: true # whether activate the map manager
  safety_manager: # used to watch the safety status of the cav
    print_message: true # whether to print the message if hazard happens
    collision_sensor:
      history_size: 30
      col_thresh: 1
    stuck_dector:
      len_thresh: 500
      speed_thresh: 0.5
    offroad_dector: [ ]
    traffic_light_detector: # whether the vehicle violate the traffic light
      light_dist_thresh: 20

# Define the basic parameters of the rsu
rsu_base: &rsu_base
  sensing:
    perception:
      activate: true # when not activated, objects positions will be retrieved from server directly
      camera:
        visualize: 4 # how many camera images need to be visualized. 0 means no visualization for camera
        num: 4 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
        # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
        positions:
          - [2.5, 0, 1.0, 0]
          - [0.0, 0.3, 1.8, 100]
          - [0.0, -0.3, 1.8, -100]
          - [-2.0, 0.0, 1.5, 180]
      lidar: # lidar sensor configuration, check CARLA sensor reference for more details
        visualize: false
        channels: 32
        range: 120
        points_per_second: 1000000
        rotation_frequency: 20 # the simulation is 20 fps
        upper_fov: 2
        lower_fov: -25
        dropoff_general_rate: 0.3
        dropoff_intensity_limit: 0.7
        dropoff_zero_intensity: 0.4
        noise_stddev: 0.02
    localization:
      activate: true # when not activated, ego position will be retrieved from server directly
      dt: *delta # used for kalman filter
      gnss: # gnss sensor configuration
        noise_alt_stddev: 0.05
        noise_lat_stddev: 3e-6
        noise_lon_stddev: 3e-6



ecloud:
  num_servers: 2 # % num_cars to choose which port to connect to. 2nd - nth server port: p = 50053 + ( n - 1 )
  server_ping_time_s: 0.005 # 5ms
  client_world_time_factor: 0.9 # what percentage of last world time to wait initially
  client_ping_spawn_s: 0.05 # sleep to wait between pings after spawn
  client_ping_tick_s: 0.005 # minimum sleep to wait between pings after tick

#define the edge basic characteristics
edge_base: &edge_base
  max_capacity: 10
  inter_gap: 0.6 # desired time gap
  open_gap: 1.2 # open gap
  warm_up_speed: 55 # required speed before cooperative merging
  change_leader_speed: true # whether to assign leader multiple speed to follow
  leader_speeds_profile: [ 85, 95 ] # different speed for leader to follow
  stage_duration: 10 # how long should the leader keeps in the current velocity stag
  target_speed: 100 # kph
  num_lanes: 4
  edge_dt: 0.2 # must be an even multiple of world_dt
  search_dt: 2
  edge_sets_destination: true # otherwise, edge sets WP
  mode: PERCEPTION

# define the background traffic control by carla
carla_traffic_manager:
  sync_mode: true # has to be same as the world setting
  global_distance: 4.0 # the minimum distance in meters that vehicles have to keep with the rest
  # Sets the difference the vehicle's intended speed and its current speed limit.
  #  Carla default speed is 30 km/h, so -75 represents 60 km/h,
  # and 20 represents 24 km/h
  global_speed_perc: -50
  set_osm_mode: true # Enables or disables the OSM mode.
  auto_lane_change: false
  random: false # whether to random select vehicles' color and model
  ignore_lights_percentage: 0 # whether set the traffic ignore traffic lights
  vehicle_list:
  range: []

# define scenario. In this scenario, a 4-vehicle platoon already exists.
scenario:
  ecloud: 
    verbose_updates: true
    location_type: explicit # random || explicit - edge scenarios require explicit (default)
    done_behavior: control # destroy || control
    step_count: 750
  edge_list:
    - <<: *edge_base
      destination: [-250, -15.79, 0.3] # shared by *all* vehicles when edge_sets_destination == true
      rsus:
      - <<: *rsu_base
        name: rsu1
        spawn_position: [-1.97, -17.08, 3.0]
        id: -1
      vehicles:
      - <<: *vehicle_base
        spawn_position: [155.52, -19.79, 0.3, 0, -180, 0]
        destination: [-130, -15.79, 0.3]
        sensing:
          <<: *base_sensing
          perception:
            <<: *base_perception
          localization:
            <<: *base_localize
            debug_helper:
              <<: *loc_debug_helper
              show_animation: false
        v2x:
          <<: *base_v2x
          communication_range: 35
        behavior:
          <<: *base_behavior
          max_speed: 100
          overtake_allowed: true
          local_planner:
            <<: *base_local_planner
            debug_trajectory: true
            debug: false
      - <<: *vehicle_base
        spawn_position: [145.52, -19.79, 0.3, 0, -180, 0]
        destination: [-130, -15.79, 0.3]
        sensing:
          <<: *base_sensing
          perception:
            <<: *base_perception
          localization:
            <<: *base_localize
            debug_helper:
              <<: *loc_debug_helper
              show_animation: false
        v2x:
          <<: *base_v2x
          communication_range: 35
        behavior:
          <<: *base_behavior
          max_speed: 100
          overtake_allowed: true
          local_planner:
            <<: *base_local_planner
            debug_trajectory: true
            debug: false
      - <<: *vehicle_base
        spawn_position: [145.52, -15.79, 0.3, 0, -180, 0]
        destination: [-130, -15.79, 0.3]
        sensing:
          <<: *base_sensing
          perception:
            <<: *base_perception
          localization:
            <<: *base_localize
            debug_helper:
              <<: *loc_debug_helper
              show_animation: false
        v2x:
          <<: *base_v2x
          communication_range: 35
        behavior:
          <<: *base_behavior
          max_speed: 100
          overtake_allowed: true
          local_planner:
            <<: *base_local_planner
            debug_trajectory: true
            debug: false
      - <<: *vehicle_base
        spawn_position: [155.60, -15.79, 0.3, 0, -180, 0]
        destination: [-110, -15.79, 0.3]
        sensing:
          <<: *base_sensing
          perception:
            <<: *base_perception
          localization:
            <<: *base_localize
            debug_helper:
              <<: *loc_debug_helper
              show_animation: false
        v2x:
          <<: *base_v2x
          communication_range: 35
        behavior:
          <<: *base_behavior
          max_speed: 75
          overtake_allowed: true
          local_planner:
            <<: *base_local_planner
            debug_trajectory: true
            debug: false
      - <<: *vehicle_base
        spawn_position: [205.52, -19.79, 0.3, 0, -180, 0]
        destination: [-130, -15.79, 0.3]
        sensing:
          <<: *base_sensing
          perception:
            <<: *base_perception
          localization:
            <<: *base_localize
            debug_helper:
              <<: *loc_debug_helper
              show_animation: false
        v2x:
          <<: *base_v2x
          communication_range: 35
        behavior:
          <<: *base_behavior
          max_speed: 100
          overtake_allowed: true
          local_planner:
            <<: *base_local_planner
            debug_trajectory: true
            debug: false
#      - <<: *vehicle_base
#        spawn_position: [185.52, -19.79, 0.3, 0, -180, 0]
#        destination: [-130, -15.79, 0.3]
#        sensing:
#          <<: *base_sensing
#          perception:
#            <<: *base_perception
#          localization:
#            <<: *base_localize
#            debug_helper:
#              <<: *loc_debug_helper
#              show_animation: false
#        v2x:
#          <<: *base_v2x
#          communication_range: 35
#        behavior:
#          <<: *base_behavior
#          max_speed: 100
#          overtake_allowed: true
#          local_planner:
#            <<: *base_local_planner
#            debug_trajectory: true
#            debug: false
#      - <<: *vehicle_base
#        spawn_position: [185.52, -15.79, 0.3, 0, -180, 0]
#        destination: [-130, -15.79, 0.3]
#        sensing:
#          <<: *base_sensing
#          perception:
#            <<: *base_perception
#          localization:
#            <<: *base_localize
#            debug_helper:
#              <<: *loc_debug_helper
#              show_animation: false
#        v2x:
#          <<: *base_v2x
#          communication_range: 35
#        behavior:
#          <<: *base_behavior
#          max_speed: 100
#          overtake_allowed: true
#          local_planner:
#            <<: *base_local_planner
#            debug_trajectory: true
#            debug: false
#      - <<: *vehicle_base
#        spawn_position: [175.60, -15.79, 0.3, 0, -180, 0]
#        destination: [-110, -15.79, 0.3]
#        sensing:
#          <<: *base_sensing
#          perception:
#            <<: *base_perception
#          localization:
#            <<: *base_localize
#            debug_helper:
#              <<: *loc_debug_helper
#              show_animation: false
#        v2x:
#          <<: *base_v2x
#          communication_range: 35
#        behavior:
#          <<: *base_behavior
#          max_speed: 100
#          overtake_allowed: true
#          local_planner:
#            <<: *base_local_planner
#            debug_trajectory: true
#            debug: false
#      - <<: *vehicle_base
#        spawn_position: [175.52, -19.79, 0.3, 0, -180, 0]
#        destination: [-130, -15.79, 0.3]
#        sensing:
#          <<: *base_sensing
#          perception:
#            <<: *base_perception
#          localization:
#            <<: *base_localize
#            debug_helper:
#              <<: *loc_debug_helper
#              show_animation: false
#        v2x:
#          <<: *base_v2x
#          communication_range: 35
#        behavior:
#          <<: *base_behavior
#          max_speed: 75
#          overtake_allowed: true
#          local_planner:
#            <<: *base_local_planner
#            debug_trajectory: true
#            debug: false
#      - <<: *vehicle_base
#        spawn_position: [195.52, -19.79, 0.3, 0, -180, 0]
#        destination: [-130, -15.79, 0.3]
#        sensing:
#          <<: *base_sensing
#          perception:
#            <<: *base_perception
#          localization:
#            <<: *base_localize
#            debug_helper:
#              <<: *loc_debug_helper
#              show_animation: false
#        v2x:
#          <<: *base_v2x
#          communication_range: 35
#        behavior:
#          <<: *base_behavior
#          max_speed: 100
#          overtake_allowed: true
#          local_planner:
#            <<: *base_local_planner
#            debug_trajectory: true
#            debug: false
#      - <<: *vehicle_base
#        spawn_position: [195.52, -15.79, 0.3, 0, -180, 0]
#        destination: [-130, -15.79, 0.3]
#        sensing:
#          <<: *base_sensing
#          perception:
#            <<: *base_perception
#          localization:
#            <<: *base_localize
#            debug_helper:
#              <<: *loc_debug_helper
#              show_animation: false
#        v2x:
#          <<: *base_v2x
#          communication_range: 35
#        behavior:
#          <<: *base_behavior
#          max_speed: 100
#          overtake_allowed: true
#          local_planner:
#            <<: *base_local_planner
#            debug_trajectory: true
#            debug: false
#      
